#!/usr/bin/env bash

# shellcheck source=/dev/null
. "$(dirname "$0")/_utils"

set -ue -o pipefail

if git rev-parse --verify HEAD > /dev/null; then
  against='HEAD'
else
  # Initial commit: diff against an empty tree object
  against="$(git hash-object -t tree /dev/null)"
fi

check 'Check vim help files' 'doc/.+\.(txt|jax)$' && {
  git -c color.status=always status --short 'doc/*.txt' 'doc/*.jax'
  if ! git diff-index --unified=0 --cached "$against" \
    | grep -q '^+Last change:' && grep -q --ignore-case 'hibiki|4513echo' \
    < "$(git diff-index --cached --name-only "$against" | grep -E 'doc/.+\.(txt|jax)$')"; then
    error '"Last change" section was not updated'
  fi
}
endcheck

check 'Check deno fmt' '\.(ts|js|tsx|jsx)$' && {
  # shellcheck disable=2046
  if ! deno fmt --check -- \
    $(git diff-index --cached --name-only "$against" | grep -E '\.(ts|js|tsx|jsx)$'); then
    error 'deno fmt failed'
  fi
}
endcheck

check 'Check deno lint' '\.(ts|js|tsx|jsx)$' && {
  # shellcheck disable=2046
  if ! deno lint -- \
    $(git diff-index --cached --name-only "$against" | grep -E '\.(ts|js|tsx|jsx)$'); then
    error 'deno fmt failed'
  fi
}
endcheck

check 'Check stylua' '\.lua$' && {
  if command -v stylua > /dev/null \
    && { [[ -f stylua.toml ]] || [[ -f .stylua.toml ]]; }; then
    # shellcheck disable=2046
    if ! stylua --check -- \
      $(git diff-index --cached --name-only "$against" | grep '\.lua$'); then
      error 'stylua failed'
    fi
  fi
}
endcheck
