[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['denops.vim', 'pum.vim']
lazy = true
on_event = ['InsertEnter']
hooks_file = '$DEIN_DIR/settings/ddc.vim'

# UI

[[plugins]]
repo = 'Shougo/ddc-ui-pum'

# sources

[[plugins]]
repo = '4513echo/ddc-github'

[[plugins]]
repo = 'LumaKernel/ddc-source-file'

[[plugins]]
repo = 'Shougo/ddc-source-around'

[[plugins]]
repo = 'Shougo/ddc-source-cmdline'

[[plugins]]
repo = 'Shougo/ddc-source-line'

[[plugins]]
repo = 'Shougo/ddc-source-mocword'

[[plugins]]
repo = 'Shougo/ddc-source-omni'

[[plugins]]
repo = 'Shougo/ddc-source-zsh'

[[plugins]]
repo = 'Shougo/neco-vim'
lazy = true
on_ft = ['toml', 'vim']

[[plugins]]
repo = 'delphinus/ddc-tmux'

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
lazy = true
on_source = 'ddc.vim'
hook_add = '''
let g:vsnip_snippet_dir = g:config_home .. '/snippets'
inoremap <expr> <C-l> vsnip#available(1) ? '<Plug>(vsnip-expand-or-jump)' : ''
snoremap <expr> <C-l> vsnip#available(1) ? '<Plug>(vsnip-expand-or-jump)' : ''
'''

[[plugins]]
repo = 'matsui54/ddc-buffer'

[[plugins]]
repo = 'shun/ddc-source-vim-lsp'

[[plugins]]
repo = 'uga-rosa/ddc-source-vsnip'

[[plugins]]
repo = 'vim-skk/skkeleton'
denops_wait = false
hooks_file = '$DEIN_DIR/settings/skkeleton.vim'

# filters

[[plugins]]
repo = 'Shougo/ddc-filter-converter_remove_overlap'

[[plugins]]
repo = 'matsui54/ddc-converter_truncate'

[[plugins]]
repo = 'tani/ddc-fuzzy'
hook_add = '''
autocmd vimrc ColorScheme * hi def link FuzzyAccent Number
'''

# popup windows

[[plugins]]
repo = 'Shougo/pum.vim'
hook_source = '''
call pum#set_option(#{
      \ highlight_columns: #{
      \   kind: 'Type',
      \ },
      \ max_columns: #{},
      \ max_width: 100,
      \ scrollbar_char: 'â–ˆ',
      \ use_complete: v:true,
      \ })
'''

[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
depends = ['denops.vim']
hook_add = '''
let g:popup_preview_config = #{
      \ maxWidth: 100,
      \ }
autocmd vimrc TextChangedI * ++once ++nested call popup_preview#enable()
'''

[[plugins]]
repo = 'matsui54/denops-signature_help'
depends = ['denops.vim']
hook_add = '''
let g:signature_help_config = #{
      \ maxWidth: 100,
      \ }
autocmd vimrc TextChangedI * ++once ++nested call signature_help#enable()
'''
