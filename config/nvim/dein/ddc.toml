[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['denops.vim', 'lexima.vim']
on_event = ['InsertEnter']
hook_add = '''
nnoremap : <Cmd>call timer_start(10, { -> user#ddc#cmdline_pre(':') })<CR>:
xnoremap : <Cmd>call timer_start(10, { -> user#ddc#cmdline_pre(':') })<CR>:
cnoremap <expr> <C-n> pum#visible() ? '<Cmd>call pum#map#select_relative(+1)<CR>' : '<Down>'
cnoremap <expr> <C-p> pum#visible() ? '<Cmd>call pum#map#select_relative(-1)<CR>' : '<Up>'
cnoremap <expr> <BS>  pum#visible() ? '<Cmd>call pum#map#cancel()<CR>' : '<BS>'
'''
hook_source = '''
Runtime dein/settings/ddc.vim
'''

# UI

[[plugins]]
repo = 'Shougo/ddc-ui-pum'
depends = 'pum.vim'
on_source = 'ddc.vim'

# sources

[[plugins]]
repo = '4513echo/ddc-github'
on_source = 'ddc.vim'

[[plugins]]
repo = 'LumaKernel/ddc-source-file'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-source-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-source-cmdline'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-source-line'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-source-nextword'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-source-omni'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-source-zsh'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = ['vim']

[[plugins]]
repo = 'delphinus/ddc-tmux'
on_source = 'ddc.vim'

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'
depends = 'vim-vsnip'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-buffer'
on_source = 'ddc.vim'

[[plugins]]
repo = 'shun/ddc-vim-lsp'
on_source = 'ddc.vim'

[[plugins]]
repo = 'vim-skk/skkeleton'
depends = ['denops.vim']
on_map = { ic = '<Plug>' }
hook_add = '''
noremap! <C-j> <Plug>(skkeleton-toggle)
'''
hook_source = '''
Runtime dein/settings/skkeleton.vim
'''

# filters

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-converter_truncate'
on_source = 'ddc.vim'

[[plugins]]
repo = 'tani/ddc-fuzzy'
on_source = 'ddc.vim'

# popup windows

[[plugins]]
repo = 'Shougo/pum.vim'
hook_source = '''
call pum#set_option(#{
      \ highlight_columns: #{
      \   kind: 'Type',
      \ },
      \ max_width: 60,
      \ use_complete: v:true,
      \ })
'''

[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
depends = ['denops.vim', 'vim-lsp']
on_source = 'ddc.vim'
hook_source = '''
call popup_preview#enable()
'''

[[plugins]]
repo = 'matsui54/denops-signature_help'
depends = ['denops.vim', 'vim-lsp']
on_source = 'ddc.vim'
hook_source = '''
call signature_help#enable()
'''
