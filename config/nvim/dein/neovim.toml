[[plugins]]
repo = 'https://github.com/4513ECHO/treesitter-compat-highlights.nvim'

[[plugins]]
repo = 'https://github.com/b0o/SchemaStore.nvim'

[[plugins]]
repo = 'https://github.com/chomosuke/term-edit.nvim'
on_event = ['TermOpen']
lua_source = '''
require("term-edit").setup {
  prompt_end = "❯ ",
  mapping = { n = { S = false } },
}
'''

[[plugins]]
repo = 'https://git.sr.ht/~whynothugo/lsp_lines.nvim'
on_event = ['LspAttach']
lua_source = '''
require("lsp_lines").setup()
vim.diagnostic.config { virtual_lines = false }
vim.keymap.set("n", "[Toggle]d", function()
  local old_config = vim.diagnostic.config()
  vim.diagnostic.config {
    virtual_text = not old_config.virtual_text,
    virtual_lines = not old_config.virtual_lines,
  }
  local mode = old_config.virtual_lines and "virtual_text" or "virtual_lines"
  vim.api.nvim_echo(
    { { "Diagnostic Mode: " }, { mode, "Constant" } },
    false,
    {}
  )
end)
'''

[[plugins]]
repo = 'https://github.com/j-hui/fidget.nvim'
on_event = ['LspAttach']
on_lua = ['fidget']
lua_source = '''
require("fidget").setup {
  progress = {
    display = {
      progress_icon = { "dots_pulse" },
    },
  },
}
'''

[[plugins]]
repo = 'https://github.com/kevinhwang91/nvim-hlslens'
on_lua = ['hlslens']
on_event = ['CmdlineEnter']
hook_add = '''
autocmd vimrc User SearchxEnter,SearchxInputChanged,VimrcSearchPost lua require("hlslens").start()
autocmd vimrc User SearchxCancel lua require("hlslens").stop()
'''
lua_source = '''
require("hlslens").setup {
  enable_incsearch = false,
  nearest_only = true,
}
'''

[[plugins]]
repo = 'https://github.com/neovim/nvim-lspconfig'
on_event = ['BufRead']
lua_source = '''
require "vimrc.plugins.lsp"
'''

[[plugins]]
repo = 'https://github.com/nvim-lua/plenary.nvim'
on_lua = ['plenary']

[[plugins]]
repo = 'https://github.com/nvim-treesitter/nvim-treesitter'
on_event = ['BufRead']
hook_post_update = 'TSUpdate'
lua_source = '''
require "vimrc.plugins.treesitter"
'''

[[plugins]]
repo = 'https://github.com/nvim-zh/colorful-winsep.nvim'
on_event = ['WinNew']
lua_source = '''
require("colorful-winsep").setup {
  hi --[[NvimSeparator]] = {
    link = "Identifier",
    default = true,
  },
  no_exec_files = { "ddu-ff" },
  symbols = { "─", "│", "┌", "┐", "└", "┘" },
}
'''

[[plugins]]
repo = 'https://github.com/rcarriga/nvim-notify'
on_lua = ['notify']
lua_add = '''
---@diagnostic disable-next-line: duplicate-set-field
vim.notify = function(...)
  require("notify").setup {
    stages = "slide",
    background_color = "NormalFloat",
    minimum_width = 30,
    icons = {
      ERROR = "✗",
      WARN = "‼",
      INFO = "i",
      DEBUG = "D",
      TRACE = "T",
    },
  }
  vim.notify = require "notify"
  vim.notify(...)
end
'''

[[plugins]]
repo = 'https://github.com/uga-rosa/ddc-source-lsp-setup'
