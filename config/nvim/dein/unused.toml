[[plugins]]
repo = 'cocopon/colorswatch.vim'
on_cmd = ['ColorSwatchGenerate']

[[plugins]]
repo = 'cocopon/inspecthi.vim'
depends = ['colorswatch.vim']
on_cmd = ['Inspecthi']

[[plugins]]
repo = 'cocopon/snapbuffer.vim'
on_cmd = ['SnapBuffer']

[[plugins]]
repo = 'guns/xterm-color-table.vim'
on_cmd = ['XtermColorTable']

[[plugins]]
repo = 'lambdalisue/fern.vim'
on_cmd = ['Fern']
hook_add = '''
let g:fern#keepalt_on_edit = v:true
let g:fern#keepjumps_on_edit = v:true
'''
[plugins.ftplugin]
fern = '''
nnoremap <buffer> F <Plug>(fern-action-focus:parent)
nnoremap <buffer> q <C-w>q
nnoremap <silent><buffer><expr> r
      \ printf('<Cmd>Fern %s<CR>', system('git rev-parse --show-toplevel'))
nnoremap <silent><buffer><expr> W
      \ printf('<Cmd>Fern %s<CR>', getcwd())
nnoremap <silent><buffer><expr> j
      \ line('.') == line('$') ? 'gg' : 'j'
nnoremap <silent><buffer><expr> k
      \ line('.') == 1 ? 'G' : 'k'
'''

[[plugins]]
repo = 'lambdalisue/vim-manpager'
on_cmd = ['MANPAGER', 'Man']

[[plugins]]
repo = 'mattn/benchvimrc-vim'
on_cmd = ['BenchVimrc']

[[plugins]]
repo = 'mattn/vim-sl'
on_func = ['sl#animate']

[[plugins]]
repo = 'pocke/keycast.vim'
depends = ['vanner']
if = '!has("nvim")'
on_cmd = ['KeycastStart', 'KeycastStop']

[[plugins]]
repo = 'pocke/vanner'

[[plugins]]
repo = 'prabirshrestha/async.vim'
on_cmd = ['AsyncEmbed']

[[plugins]]
repo = 'skanehira/badapple.vim'
if = '!has("nvim")'
on_cmd = ['BadApple']

[[plugins]]
repo = 'thinca/vim-prettyprint'
on_cmd = ['PP', 'PrettyPrint']

[[plugins]]
repo = 'thinca/vim-scall'
on_func = ['S']
hook_add = '''
let g:scall_function_name = 'S'
'''

[[plugins]]
repo = 'thinca/vim-scouter'
on_cmd = ['Scouter']
on_func = ['Scouter']
hook_add = '''
command! Scouter echo Scouter(g:config_home)
'''

[[plugins]]
repo = 'tweekmonster/startuptime.vim'
on_cmd = ['StartupTime']

[[plugins]]
repo = 'wsdjeg/dein-ui.vim'
on_cmd = ['DeinUpdate']
[plugins.ftplugin]
SpaceVimPlugManager = '''
autocmd vimrc TextChanged <buffer> normal! G
'''

[[plugins]]
repo = 'Yggdroot/indentLine'
on_event = ['BufRead']
hook_add = '''
let g:indentLine_bufTypeExclude = ['help', 'terminal']
let g:indentLine_char = 'Â¦'
let g:indentLine_faster = v:true
let g:indentLine_setConceal = v:false
'''
