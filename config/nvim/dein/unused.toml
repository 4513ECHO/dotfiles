[[plugins]]
repo = 'cespare/vim-toml'
if = '!has("patch-8.2.3520") && !has("nvim")'
merge_ftdetect = true
on_ft = ['toml']

[[plugins]]
repo = 'dhruvasagar/vim-zoom'
on_map = { n = '<Plug>' }
hook_add = '''
let g:zoom#statustext = 'zoomed'
nnoremap <C-w>z <Plug>(zoom-toggle)
'''

[[plugins]]
repo = 'kat0h/bufpreview.vim'
depends = ['denops.vim']
on_cmd = ['PreviewMarkdown', 'PreviewMarkdownClose', 'PreviewMarkdownToggle']
on_ft = ['markdown']
hook_add = '''
let g:bufpreview_server_host = '0.0.0.0'
let g:bufpreview_server_port = 8888
'''

[[plugins]]
repo = 'lambdalisue/vim-manpager'
on_cmd = ['MANPAGER', 'Man']

[[plugins]]
repo = 'lambdalisue/mr-quickfix.vim'
on_cmd = ['Mru', 'Mrw']

[[plugins]]
repo = 'lambdalisue/qfloc.vim'
on_ft = ['qf']
hook_add = '''
let g:qfloc_disable_default_mappings = v:true
" NOTE: I can't toggle qfloc sign/hover.
let g:qfloc_disable_sign = v:true
let g:qfloc_disable_hover = v:true
nmap <expr> ]c &diff ? ']c' : '<Plug>(qfloc-cnext)'
nmap <expr> [c &diff ? '[c' : '<Plug>(qfloc-cprevious)'
nnoremap ]l <Plug>(qfloc-lnext)
nnoremap [l <Plug>(qfloc-lprevious)
'''
[plugins.ftplugin]
qf = '''
nnoremap <buffer> j <Plug>(qfloc-j)
nnoremap <buffer> k <Plug>(qfloc-k)
nnoremap <buffer> s <Plug>(qfloc-sbuffer)
nnoremap <buffer> p <Plug>(qfloc-preview)
nnoremap <buffer> o <Plug>(qfloc-preview)
nnoremap <buffer> u <Plug>(qfloc-undo)
nnoremap <buffer> dd <Plug>(qfloc-delete)
xnoremap <buffer> d  <Plug>(qfloc-delete)
'''

[[plugins]]
repo = 'mattn/benchvimrc-vim'
on_cmd = ['BenchVimrc']

[[plugins]]
repo = 'mattn/vim-sl'
on_event = ['CmdUndefined']
on_func = ['sl#animate']

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
hook_add = '''
let g:precious_enable_switchers = {
      \ '*': {
      \   'setfiletype': 0,
      \ },
      \ 'markdown': {
      \   'setfiletype': 1,
      \ },
      \ 'toml': {
      \   'setfiletype': 1,
      \ },
      \ 'vim': {
      \   'setfiletype': 1,
      \ },
      \ }
'''

[[plugins]]
repo = 'pocke/keycast.vim'
depends = ['vanner']
if = '!has("nvim")'
on_cmd = ['KeycastStart', 'KeycastStop']

[[plugins]]
repo = 'pocke/vanner'

[[plugins]]
repo = 'reireias/vim-cheatsheet'
on_cmd = ['Cheat']
hook_add = '''
let g:cheatsheet#cheat_file = g:config_home .. '/doc/cheatsheet.md'
'''

[[plugins]]
repo = 'rhysd/vim-fixjson'
on_ft = ['json']
on_cmd = ['FixJson']

[[plugins]]
repo = 'skanehira/badapple.vim'
if = '!has("nvim")'
on_cmd = ['BadApple']

[[plugins]]
repo = 'thinca/vim-scall'
on_func = ['S']
hook_add = '''
let g:scall_function_name = 'S'
'''

[[plugins]]
repo = 'thinca/vim-scouter'
on_cmd = ['Scouter']
on_func = ['Scouter']
hook_add = '''
command! Scouter echo Scouter(g:config_home)
'''

[[plugins]]
repo = 'tmux-plugins/vim-tmux-focus-events'
if = '!has("gui_running") && !has("patch-8.2.2345") && !has("nvim")'

[[plugins]]
repo = 'tpope/vim-repeat'
on_map = { xno = '<Plug>(Repeat' }

[[plugins]]
repo = 'tweekmonster/startuptime.vim'
on_cmd = ['StartupTime']

[[plugins]]
repo = 'wsdjeg/dein-ui.vim'
on_cmd = ['DeinUpdate']
[plugins.ftplugin]
SpaceVimPlugManager = '''
autocmd vimrc TextChanged <buffer> normal! G
'''

