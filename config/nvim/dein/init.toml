[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'delphinus/vim-auto-cursorline'
hook_add = '''
let g:auto_cursorline_wait_ms = 4000
'''
[plugins.ftplugin]
qf = '''
let b:auto_cursorline_disabled = v:true
'''
molder = '''
let b:auto_cursorline_disabled = v:true
'''
ddu-ff = '''
let b:auto_cursorline_disabled = v:true
'''
ddu-ff-filter = '''
let b:auto_cursorline_disabled = v:true
'''
fern = '''
let b:auto_cursorline_disabled = v:true
'''

[[plugins]]
repo = 'itchyny/vim-highlighturl'

[[plugins]]
repo = 'itchyny/vim-parenmatch'
# TODO: send PR to the repository to use instead 'hi def Group' instead of 'hi Group'
# autocmd vimrc ColorScheme * hi link ParenMatch MatchParen

[[plugins]]
repo = 'lambdalisue/guise.vim'
depends = ['denops.vim']
hook_add = '''
let g:guise_edit_opener = 'vsplit'
'''

[[plugins]]
repo = 'lambdalisue/mr.vim'

[[plugins]]
repo = 'mattn/vim-molder'
[plugins.ftplugin]
molder = '''
setlocal nolist nospell
nnoremap <buffer> <C-l> <Plug>(molder-reload)<Cmd>set nohlsearch<CR>
nnoremap <buffer> q <C-w>q
nnoremap <silent><buffer><expr> R
      \ printf('<Cmd>edit %s<CR>', system('git rev-parse --show-toplevel'))
nnoremap <silent><buffer><expr> .
      \ printf('<Cmd>edit %s<CR>', getcwd())
nnoremap <silent><buffer><expr> j
      \ line('.') == line('$') ? 'gg' : 'j'
nnoremap <silent><buffer><expr> k
      \ line('.') == 1 ? 'G' : 'k'
'''

[[plugins]]
repo = 'mattn/vim-molder-operations'
[plugins.ftplugin]
molder = '''
nnoremap <silent><buffer> dd <Plug>(molder-operations-delete)
nnoremap <silent><buffer> r  <Plug>(molder-operations-rename)
'''

[[plugins]]
repo = 'rafamadriz/friendly-snippets'

[[plugins]]
repo = 'roxma/vim-tmux-clipboard'
if = '!has("gui_running")'

[[plugins]]
repo = 'vim-denops/denops.vim'
rev = 'stream'
hook_add = '''
let g:denops_server_addr = '127.0.0.1:32123'
'''
# autocmd vimrc User DenopsProcessStarted call denops#plugin#check_type()

[[plugins]]
repo = 'vim-jp/vimdoc-ja'
type__depth = 1
