---
version: 2
lint-debounce: 0.5s
root-markers:
  - .git/
  - .git
tools:
  textlint-lint: &textlint-lint
    prefix: textlint
    lint-command: >
      deno run --allow-all --no-lock
      npm:textlint --cache --format=unix --no-color ${INPUT}
    lint-ignore-exit-code: true
    lint-formats:
      - "%f:%l:%c: %m [%trror/%r]"
      - "%E%f:%l:%c: %m"
    root-markers:
      - .textlintrc
      - .textlintrc.json
      - .textlintrc.yaml
      - .textlintrc.yml
    require-marker: true
    commands:
      - title: textlint fix
        command: deno
        arguments:
          - run
          - --allow-all
          - --no-lock
          - npm:textlint
          - --cache
          - --fix
          - ${INPUT}

  hadolint-lint: &hadolint-lint
    prefix: hadolint
    lint-command: hadolint
    lint-formats:
      - "%f:%l DL%n %t%*[a-z]: %m"

  fixjson-format: &fixjson-format
    format-command: >
      deno run --allow-all --no-config --no-lock --node-modules-dir=false
      npm:fixjson --stdin-filename ${INPUT}
    format-stdin: true

  stylua-format: &stylua-format
    format-command: stylua --search-parent-directories -
    format-stdin: true

  shellcheck-lint: &shellcheck-lint
    prefix: shellcheck
    lint-command: shellcheck -f gcc -x -
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %t%*[^:]: %m [SC%n]"

  shfmt-format: &shfmt-format
    format-command: shfmt -s -ln bash -i 2 -bn -ci -sr
    format-stdin: true

  actionlint-lint: &actionlint-lint
    prefix: actionlint
    lint-command: "bash -c \"[[ '${INPUT}' =~ \\\\.github/workflows/ ]]\" && actionlint -oneline -no-color -"
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %m"
    root-markers:
      - .github

languages:
  dockerfile:
    - <<: *hadolint-lint
  json:
    - <<: *fixjson-format
  markdown:
    - <<: *textlint-lint
  lua:
    - <<: *stylua-format
  sh:
    - <<: *shellcheck-lint
    - <<: *shfmt-format
  yaml:
    - <<: *actionlint-lint
